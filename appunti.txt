ip addr show - view interfaces
ip link set nome_int {up | down} - enable/disable interface
ip addr {add | del} ip_addr/mask {broadcast brd_addr | } dev nome_int - set/remove ip address of interface
ip addr flush dev nome_int - remove ip addr of int
/etc/network/interfaces - configuration of interfaces
{ifup | ifdown} nome_int - configure/disable interface
ip route show - show routing table
ip route add {ip_addr/mask dev nome_int| default via ip_addr}  - add route/gateway
ip route get ip_addr - show used route
/etc/hosts - list of {address, name}
/etc/resolv.conf - ip of servers(dns) on hand
nslookup domain_name - manual request
/etc/nsswitch.conf - show sources in order
L 3
apt install isc-dhcp-server - istalla pacchetto per creare dhcp
/etc/default/isc-dhcp-server - dhcp configuration
/etc/dhcp/dhcpd.conf - dhcp configuration
systemctl restart isc-dhcp-server.service - update edits
ping ip_addr {-c | -i | -q | -s} - ping, count requests, request interval, quiet, pack size
traceroute ip_addr - nodes of the path to ip_addr
L 4
define at beginning
define structs using struct
punt = (type*)malloc(sizeof(type)*dimensione), free(punt) - includes{stdlib.h}
printf('', arguments), scanf(format, indirizzi) - to see format page 11, includes{stdio.h}
strlen, strcmp, strncpy, strncat - includes{string.h}
fopen, fprintf, fscanf - includes{stdio.h}
stat(filename, struct stat &info) - includes{stdio.h, sys/stat.h}
L 5
includes{arpa/inet.h, sys/types.h, sys/socket.h, netinet/in.h}
socket(int domain, int type, int protocol = 0) - domani {AF_LOCAL, AF_INET}, type {SOCK_STREAM, SOCK_DGRAM}, includes {sys/types.h, sys/socket.h}
struct sockaddr_in{sa_family_t sin_family; in_port_t sin_port; struct in_addr sin_addr;}, struct in_addr{uint32_t s_addr;} - includes{sys/socket.h, netinet/in.h}
uint32_t htonl(uint32_t hostlong), uint16_t htons(uint16_t hostshort), uint32_t ntonl(uint32_t hostlong), uint16_t ntonl(uint16_t hostshort) - includes{arpa/inet.h, stdint.h?}
int inet_pton(int af, const char* src, void* dst), const char* inte_ntpo(int af, const void* src, char* dst, socklen_t size) - af = famiglia, void* = puntatore a in_addr, char* src = ip_addr
int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen) - set ip for socket 
int listen(int sockfd, int backlog) - listen to socket
int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen) - accept connection request
int connect(int sockfd, const struct sockaddr* addr, socklen_t addrlen) - connection request
L 6
ssize_t send(int sockfd, const void* buf, size_t, len, int flags)
ssize_t recv(int sockfd, const void* buf, size_t len, int flags)
int close(int fd)
errno, void perror('')
L 7
pid_t fork(void);
void FD_SET(int fd, fd_set* set), int FD_ISSET(int fd, fd_set* set), void FD_CLR(int fd, fd_set* set), void FD_ZERO(fd_set* set) - add, isIn, remove, empty descriptor set
int select(int nfds, fd_set* readfds, fd_set* weitefds, fd_set* exceptfds, struct timeval* timeout) - returns number of ready descriptors, includes{sys/time.h, sys/types.h, unistd.h} 
struct timeval{ long tv_sec; long tv_usec} - null = unbounded, tv_sec seconds + tv_usec microseconds, 0;0; = polling
L 8 
ssize_t sendto(int sockfd, const void* buf, size_t len, int flags, const struct sockaddr* dest_addr, socklen_t addrlen) - udp socket send message
ssize_t recvfrom(int sockfd, const void* buf, size_t len, int flags, struct sockaddr* src_addr, socklen_t addrlen) - udp socket receive message
L 9
iptables [-t table] -L [chain] - view rules, tables {filter, nat} chai{{INPUT, OUTPUT, T...}, {PREROUTING, OUTPUT, POSTROUTING}}
iptables [-t table] -A chain rule-specification - add rule to end
iptables [-t table] -I chain [num] rule-specification - add rule at line num
iptables [-t table] -D chain {rule-specification | num} - remove rule
iptables [-t table] -P target - change default rule
rule specification = [-p protocol -s src_addr -d dst_addr --sport src_port --dport dst_port -i in_int -o out_int -j {DROP | ACCEPT}]
iptables-save > file - save rules on file
iptables-restore < file - restore rules from file
L 10
Network address traslation NAT
Port address traslation PAT
iptables -t nat -A chain -s src_addr -j {SNAT | DNAT} --to-source dst_addr
L 11
apache2ctl {start | stop | restart | status | configtest}
service apache2 {start | stop | restart | reload}
/etc/apache2 - apache config directory 
/etc/apache2/apache2.conf - main config file
{a2enconf | a2disconf} file - enable/disable configuration file in conf-available
{a2enmod | a2dismod} file - enable/disable complex configuration file in mods-available 
{a2ensite | a2dissite} file - enable/disable site configuration file in sites-available
configuration file directives:
ServerRoot /etc/apache2 - define main configuration directory, apache2ctl execute it by default
KeepAlive {on | off} - supports persistent connection
KeepAliveTimeout n - wait n seconds for next request before closing connection
Listen n - port on listen on for connections, in ports.conf
ErrorLog /var/log/apache2/error.log - ErrorLogFormat and LogLevel to edit options
<VirtualHost ip:porta>...</VirtualHost> - container of virtual host
ServerName name - name = symbolic name of site
DocumentRoot /var/www/html - directory of site's files
DirectoryIndex index.html - default file when not specified, in dir.conf module
UserDir public_html - allow to store user files at $site/~username/, in userdir.conf




