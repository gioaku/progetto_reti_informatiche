***PEER***
struct {
    //me
    int port

    //date
    char* date[DATE_LEN]

    //server
    int port
        // udp socket
        int socket
        struct sockaddr_in addr
        socklen_t addr_len
        char buffer[MAX_UDP_MSG]
    
    //vicini
    struct Neighbors nbs

        // prev tcp socket
        int socket
        struct sockaddr_in addr
        socklen_t addr_len
        char buffer[MAX_TCP_MSG]
        
        // next
        int socket, new_socket
        struct sockaddr_in myaddr, nextaddr
        struct socklen_t myaddr_len, netxaddr_len
        char buffer[MAX_TCP_MSG]

    //sets
    fd_set master
    fd_set readset
    int fdmax
}
stdin msg
    help
    start addr, port
        init listener
        CONN_REQ CONN_ACK
        NBR_LIST LIST_ACK
        SET_DATE DATE_ACK
        update sets

        reload registers
        
    ++ add type qty
        write entries(type, qty, date)
    ++ get aggr type period
        parameters controls
        period controls and traduction
        for date in period
            if ihaveall calc and ret
            if nbshasall get and ret
            send floodforentries
            for list in recv floodforentries
                tcp reqentries
                update entries
                calc and ret

    stop
        ++ share registers
        send exit udp to ds

listener msg

next msg

prev msg

UDP msg
    close
        save registers
    update nb prev
    update nb next
    
    ++ DAY_RSET
        date++
        
++ peer msg
    floodforentries
        if all keep flooding
        else if i have all 
            empty list
            write myport has all
            keep flooding
        else    
            if ihavedata add myport to list
            keep flooding

++ peer msg tcp
    reqelab
        if have tcp send
    reqentries
        tcp send entries
    leaving
        tcp recv entries to join to mines

