SCHEMA PEER

select per monitorare arrivo informazioni
se informazioni dal socket {
    ricevo e leggo pacchetto UDP
    se dal server {
        se cambio lista vicini {
            leggo i nuovi vicini
            modifico la lista di neighbors attraverso uno switch
            invio ack
        }
        se spegnimento server {
            // gestisco i dati
            invio ack
            chiudo il socket
            esco
        }
        se FLAG_SET {
            invio ack
            setto il flag
        }
        se FLAG_RST {
            invio ack
            resetto il flag
        }
    }
    se da un vicino {
        se richiesta di aggregato {
            invio ack
            leggo i dati arrivati
            controllo se ho il dato richiesto (aggregato del tipo richiesto calcolato sulle entry richieste)
            se non ho il dato {
                se ho un vicino solo
                    invio reply con 0 (e' lui che ha fatto la richiesta)
                se ho piu' di un vicino {
                    se il prossimo vicino e' quello da cui e' partita la richiesta
                        invio reply con 0
                    altrimenti
                        gli giro il messaggio arrivato a me
                }
            }
            se ho il dato
                lo invio direttamente a chi lo ha chiesto
        }
        se richiesta di entries {
            invio ack
            leggo il peer che necessita di entries
            cerco le entries che ho io e che lui non ha
            per ogni entry {
                compongo messaggio di risposta
                lo invio al peer richiedente
            }
            se il peer che necessita di entries e' il mio vicino 0
                invio messaggio di alt
            altrimenti
                inoltro al vicino 0 il messaggio di richiesta
        }
        se entry mancante {
            invio ack
            la inserisco nel file
        }
    }
    se da time server {
        se FLAG_SET {
            invio ack
            salvo il numero di porta del time server
            alzo il flag
        }
        se richiesta di entries {
            invio ack
            invio numero di entries nel mio file
            le invio tutte al time server
        }
        se arrivo aggregati giornalieri {
            stampo a video i dati
            elimino tutti i file del giorno
        }
        se FLAG_RST {
            invio ack
            abbasso il flag
        }
    }
}

se informazioni da stdin {
    se flag settato
        rifiuto comandi da stdin
    altrimenti {
        se help
            stampo i comandi
        se start {
            controllo che il peer non sia gia' connesso
            controllo mutua esclusione di stop e get
            invio richiesta di connessione al server
            ricevo porta del time server
            ricevo lista di vicini
            aggiungo i vicini

        }
        se add {
            controllo che il peer sia connesso
            controllo che i dati siano corretti
            controllo che nessuno stia eseguendo una get
            invio messaggio del tipo giusto di nuova entry al server
            inserisco l'entry in un file chiamato <data>_<porta>.txt
        }
        se get {
            controllo che peer sia connesso
            controllo gli input
            acquisisco mutua esclusione
            se non posso acquisirla
                esco dalla get
            se mi servono i dati di oggi {
                invio richiesta numero entries del giorno al server
                ricevo numero entries del giorno
                se zero
                    niente da calcolare
                altrimenti se uguale a quello posseduto {
                    calcolo il totale
                    lo scrivo su un file
                }
                altrimenti {
                    se ho zero vicini
                        impossibile ottenere il dato richiesto
                    altrimenti {
                        invio richiesta dati aggregati con nome porta, tipo e numero entries attuali
                        ricevo risposta
                        se contiene un numero positivo
                            lo scrivo su un file
                        se contiene 0 {
                            invio richiesta di nuove entrate con tipo e mia porta
                            per ogni entrata che mi manca {
                                ricevo il messaggio
                                controllo che non sia corrotto
                                aggiungo la nuova entrata alle mie
                            }
                            ricevo messaggio di fine trasferimento entrate
                            calcolo il totale
                            lo scrivo su un file
                        }
                    }
                }
            }
            se data di inizio diversa da oggi {
                richiedo dati al time server
                ricevo numero di entries che mi servono
                per ogni entry da ricevere {
                    ricevo il messaggio
                    lo copio su un file temporaneo
                }
                stampo la risposta alla richiesta dell'utente
            }
            rilascio mutua esclusione
        }
        se stop {
            controllo che nessuno stia eseguendo una get
            acquisisco mutua esclusione su stop
            controllo che il peer sia connesso
            per ogni vicino
                invio le entries che gli mancano
            invio messaggio di uscita
            rilascio mutua esclusione su stop
            chiudo il socket
            esco
        }
    }
}
